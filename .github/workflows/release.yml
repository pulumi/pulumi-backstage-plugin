name: Deploy Packages
on:
  push:
    tags:
    - v*.*.*
    - "!v*.*.*-**"

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x]
        plugin:
          - 'backstage-plugin-pulumi'
          - 'backstage-scaffolder-backend-pulumi'
          
    env:
      CI: true
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
      - uses: actions/checkout@v3

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/ # Needed for auth
      - name: yarn install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
          dir: plugins/${{ matrix.plugin }}

      - name: type checking and declarations
        run: yarn tsc
        working-directory: plugins/${{ matrix.plugin }}

      - name: build
        run: yarn build
        working-directory: plugins/${{ matrix.plugin }}

  # A separate release build that is only run for commits that are the result of merging the "Version Packages" PR
  # We can't re-use the output from the above step, but we'll have a guaranteed node_modules cache and
  # only run the build steps that are necessary for publishing
  release:
    needs: build

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        plugin:
          - 'backstage-plugin-pulumi'
          - 'backstage-scaffolder-backend-pulumi'
          
    defaults:
      run:
        working-directory: ${{ matrix.plugin }}

    env:
      CI: 'true'
      NODE_OPTIONS: --max-old-space-size=4096

    steps:
      - uses: actions/checkout@v3

      - name: use node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/ # Needed for auth
      - name: yarn install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
          dir: plugins/${{ matrix.plugin }}

      - name: type checking and declarations
        run: yarn tsc
        working-directory: plugins/${{ matrix.plugin }}

      - name: build
        run: yarn build
        working-directory: plugins/${{ matrix.plugin }}

      # Publishes current version of packages that are not already present in the registry
      - name: publish
        run: |
          yarn config set -H 'npmAuthToken' "${{secrets.NPM_TOKEN}}"
          npm publish --access public
        working-directory: plugins/${{ matrix.plugin }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
