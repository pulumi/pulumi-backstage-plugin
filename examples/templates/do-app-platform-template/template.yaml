apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: do-app-platform-template
  title: Create a DigitalOcean App Platform application
  description: |
    A template to create a DigitalOcean App Platform application.
  tags:
  - pulumi
  - digitalocean
spec:
  owner: user:guest
  type: infrastructure
  parameters:
  - title: Provide project information
    required:
    - name
    - owner
    properties:
      name:
        title: Name
        type: string
        description: Unique name of the Pulumi project.
        ui:
          field: EntityNamePicker
      description:
        title: Description
        type: string
        description: Tell us more about this project.
      system:
        title: System
        type: string
        description: System this component belongs to.
        ui:field: EntityPicker
        ui:options:
          catalogFilter:
            kind:
            - System
      owner:
        title: Owner
        type: string
        description: Owner of the component
        ui:field: OwnerPicker
        ui:options:
          allowedKinds:
          - Group
  - title: Configure Pulumi template
    required:
    - stack
    - organization
    properties:
      organization:
        title: Organization
        type: string
        description: The Pulumi organization to use for the Pulumi project
      stack:
        title: Select stack
        type: string
        enum:
        - dev
        - staging
        - prod
        enumNames:
        - Development
        - Staging
        - Production
        description: The pulumi stack to use
  - title: Choose a location
    required:
    - repoUrl
    properties:
      repoUrl:
        title: Repository Location
        type: string
        ui:field: RepoUrlPicker
        ui:options:
          allowedHosts:
          - github.com

  steps:
  - id: fetch-base
    name: Fetch Base
    action: fetch:template
    input:
      url: ./skeleton
      values:
        name: ${{parameters.name}}
        description: ${{ parameters.description }}
        destination: ${{ parameters.repoUrl | parseRepoUrl }}
        organization: ${{parameters.organization}}
        stack: ${{ parameters.stack }}
        owner: ${{ parameters.owner }}
        system: ${{ parameters.system }}
        repoCloneUrl: "https://github.com/${{ (parameters.repoUrl | parseRepoUrl)['owner'] }}/${{ (parameters.repoUrl | parseRepoUrl)['repo'] }}"

  - id: publish
    name: Publish to GitHub
    action: publish:github
    input:
      allowedHosts: ["github.com"]
      repoVisibility: public
      description: "This is ${{ parameters.component_id }}"
      repoUrl: ${{ parameters.repoUrl }}
      defaultBranch: main
      requiredApprovingReviewCount: 0
      protectDefaultBranch: false

  - id: pulumi-deploy-infrastructure
    name: Deploy the infrastructure using Pulumi CLI
    action: pulumi:up
    input:
      deployment: false
      preRunCommands:
      - "go mod tidy"
      name: ${{ parameters.name }}
      repoUrl: "https://github.com/${{ (parameters.repoUrl | parseRepoUrl)['owner'] }}/${{ (parameters.repoUrl | parseRepoUrl)['repo'] }}"
      repoProjectPath: .pulumi
      organization: ${{parameters.organization}}
      outputs:
      - url
      stack: ${{ parameters.stack }}

  - id: register
    name: Registering the Catalog Info Component
    action: catalog:register
    input:
      repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
      catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
    - title: Application URL
      url: ${{ steps['pulumi-deploy-infrastructure'].output.url }}
